services:

    graviton.core.jms.cache.provider:
        class: "%graviton.core.jms.cache.provider.class%"
        arguments:
          - "jms"
          - "@=service(parameter('graviton.cache.provider.service_id_local'))"

    graviton.core.http.client:
      class: 'GuzzleHttp\Client'
      factory: ['Graviton\PhpProxy\Factory', 'createHttpClient']
      arguments:
        - "%graviton.core.http.client.options%"
        - "%graviton.core.httpclient.debugRequests%"
        - "@logger"
        - "%graviton.core.httpclient.debugMaxLength%"

    graviton.core.controller.main:
      class: "%graviton.core.controller.main.class%"
      public: true
      arguments:
        - "@router"
        - "@?graviton.rest.response"
        - "@graviton.rest.restutils"
        - "@event_dispatcher"
        - "@graviton.proxy.service.apiloader"
        - "%graviton.core.links%"
        - "%graviton.core.main.path.whitelist%"
        - "%graviton.proxy.sources%"

    graviton.core.model.version:
        class: "%graviton.core.model.version.class%"
        parent: "graviton.rest.model"

    # Request host listener -->
    graviton.core.listener.requesthost:
        class: "%graviton.core.listener.requesthost.class%"
        arguments:
          - "@router"
          - "%graviton.router.host%"
          - "%graviton.router.port_http%"
          - "%graviton.router.port_https%"
        tags:
          -
            name: "kernel.event_listener"
            event: "kernel.request"
            method: "onKernelRequest"

    graviton.core.controller.version:
        class: Graviton\CoreBundle\Controller\VersionController
        public: true
        parent: "graviton.rest.controller"
        calls:
          -
            method: "setVersionInformation"
            arguments:
              - "%graviton.core.version.data%"
          -
            method: "setModel"
            arguments:
              - "@graviton.core.model.version"

    graviton.core.controller.favicon:
        class: Graviton\CoreBundle\Controller\FaviconController
        public: true

    graviton.core.service.jmespath:
        class: JmesPath\CompilerRuntime
        public: true
        arguments:
          - "%graviton.jmespath.cache_dir%"

    graviton.core.listener.json_exception:
        class: "%graviton.core.listener.jsonexceptionlistener.class%"
        calls:
          -
            method: "setLogger"
            arguments:
              - "@logger"
        tags:
          -
            name: "kernel.event_listener"
            event: "kernel.exception"
            method: "onKernelException"

    graviton.core.command.waitfordatabase:
        class: "Graviton\\CoreBundle\\Command\\WaitForDatabaseCommand"
        arguments:
        - "@doctrine_mongodb.odm.default_document_manager"
        tags:
        -
            name: console.command

    graviton.core.routing.loader:
      class: "Graviton\\CoreBundle\\Routing\\RouteLoader"
      arguments:
        - "@service_container"
        - "%graviton.routing.loader.services%"
      tags:
        -
          name: "routing.loader"

    graviton.core.repository.dummy:
      class: Doctrine\ODM\MongoDB\DocumentRepository
      factory: 'doctrine_mongodb.odm.default_document_manager:getRepository'
      arguments:
        - 'GravitonCoreBundle:Dummy'

    graviton.core.model.dummy:
      class: Graviton\CoreBundle\Model\Dummy
      parent: "graviton.rest.model"
      public: true
      arguments:
        - "@graviton.rql.visitor.mongodb"
      calls:
        -
          method: setRepository
          arguments:
            - "@graviton.core.repository.dummy"

    graviton.core.document.dummy:
      class: Graviton\CoreBundle\Document\Dummy

    # fixtures
    Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppData:
      class: Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppData
      tags:
          - { name: 'doctrine.fixture.orm' }

    Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppDataExceedSinglePageLimit:
      class: Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppDataExceedSinglePageLimit
      tags:
        - { name: 'doctrine.fixture.orm' }

    Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppDataNoShowMenu:
      class: Graviton\CoreBundle\DataFixtures\MongoDB\LoadAppDataNoShowMenu
      tags:
        - { name: 'doctrine.fixture.orm' }
