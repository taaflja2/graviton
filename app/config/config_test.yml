imports:
    - { resource: config_dev.yml }
    - { resource: "@FrameworkBundle/Resources/config/test.xml" }

parameters:
    kernel.debug: false
    # we shall not produce queue messages in tests
    graviton.rabbitmq.producer.job.class: Graviton\RabbitMqBundle\Producer\Dummy
    # in tests, we always use the array cache provider
    graviton.cache.provider.service_id: graviton.cache.provider.local
    #graviton.rabbitmq.listener.eventstatusresponselistener.class: Graviton\RabbitMqBundle\Listener\DummyResponseListener
    # for testing group serialization
    graviton.rest.serializer.groups: {  }
    graviton.rest.serializer.allow_group_override_header: true
    graviton.rest.serializer.override_header_name: x-groups
    graviton.rest.schema_variation.enable: true

    graviton.worker.relativeUrl: "https://backendalias:9443/"
    graviton.translator.default.locale: en

    graviton.generator.synthetic_fields: 'int:clientId'
    graviton.rest.data_restriction.map:
        x-graviton-client: "int:clientId"

    # for testing WhoamiController and security features
    graviton.security.authentication.provider.model: gravitondyn.securityuser.model.securityuser
    graviton.security.authentication.provider.model.query_field: username
    graviton.security.authentication.strategy: graviton.security.authentication.strategy.multi
    graviton.security.authentication.strategy.cookie.key: x-graviton-user
    graviton.security.authentication.strategy.subnet.key: 127.0.0.0/24
    graviton.security.authentication.strategy.subnet.header_field: x-graviton-auth
    graviton.security.authentication.strategy.header.key: x-graviton-user

framework:
    test: ~
    session:
        storage_id: session.storage.mock_file
    profiler:
        enabled: false
        collect: false

web_profiler:
    toolbar: false
    intercept_redirects: false

monolog:
    handler:
        name: main
        type: "test"

old_sound_rabbit_mq:
    connections:
        default:
            host:     "%graviton.rabbitmq.host%"
            port:     "%graviton.rabbitmq.port%"
            user:     "%graviton.rabbitmq.user%"
            password: "%graviton.rabbitmq.password%"
            vhost:    "%graviton.rabbitmq.vhost%"
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
    producers:
        document_event:
            class: Graviton\RabbitMqBundle\Producer\Dummy

graviton_proxy:
    sources:
        swagger:

# DoctrineMongoDB Configuration
# see: http://symfony.com/doc/current/bundles/DoctrineMongoDBBundle/config.html
doctrine_mongodb:
    connections:
        faulty:
            server: failServer
            options: { connect: true }
    document_managers:
        faulty:
            connection: faulty
            retry_connect: 3
            retry_query: 1
            mappings:
                GravitonCoreBundle: ~
                GravitonRabbitMqBundle: ~
                GravitonI18nBundle: ~
